[{"D:\\workspace\\electron\\cloud-doc\\src\\index.js":"1","D:\\workspace\\electron\\cloud-doc\\src\\reportWebVitals.js":"2","D:\\workspace\\electron\\cloud-doc\\src\\App.js":"3","D:\\workspace\\electron\\cloud-doc\\src\\components\\FileSearch.js":"4","D:\\workspace\\electron\\cloud-doc\\src\\components\\FileList.js":"5","D:\\workspace\\electron\\cloud-doc\\src\\utils\\defaultFiles.js":"6","D:\\workspace\\electron\\cloud-doc\\src\\hooks\\useKeyPress.js":"7","D:\\workspace\\electron\\cloud-doc\\src\\components\\BottomBtn.js":"8","D:\\workspace\\electron\\cloud-doc\\src\\components\\TabList.js":"9","D:\\workspace\\electron\\cloud-doc\\src\\utils\\helper.js":"10","D:\\workspace\\electron\\cloud-doc\\src\\utils\\fileHelper.js":"11"},{"size":500,"mtime":1607869206803,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607869206803,"results":"14","hashOfConfig":"13"},{"size":6199,"mtime":1613220120032,"results":"15","hashOfConfig":"13"},{"size":2174,"mtime":1612693620884,"results":"16","hashOfConfig":"13"},{"size":4057,"mtime":1613208346012,"results":"17","hashOfConfig":"13"},{"size":408,"mtime":1611157065010,"results":"18","hashOfConfig":"13"},{"size":733,"mtime":1609664577902,"results":"19","hashOfConfig":"13"},{"size":668,"mtime":1611156748149,"results":"20","hashOfConfig":"13"},{"size":1758,"mtime":1611156990579,"results":"21","hashOfConfig":"13"},{"size":217,"mtime":1612765816505,"results":"22","hashOfConfig":"13"},{"size":454,"mtime":1613200816180,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pdgmph",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"D:\\workspace\\electron\\cloud-doc\\src\\index.js",[],["52","53"],"D:\\workspace\\electron\\cloud-doc\\src\\reportWebVitals.js",[],"D:\\workspace\\electron\\cloud-doc\\src\\App.js",["54"],"import React, { useState } from 'react'\nimport { faPlus, faFileImport, faSave } from '@fortawesome/free-solid-svg-icons'\nimport SimpleMDE from 'react-simplemde-editor'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport FileSearch from './components/FileSearch'\nimport FileList from './components/FileList'\nimport BottomBtn from './components/BottomBtn'\nimport TabList from './components/TabList'\nimport defaultFiles from './utils/defaultFiles'\nimport { flattenArr, objToArr } from './utils/helper'\nimport fileHelper from './utils/fileHelper'\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"easymde/dist/easymde.min.css\"\n\n// require node.js modules\nconst { join } = window.require('path')\nconst { remote } = window.require('electron')\n\n// const Store = window.require('electron-store')\n// debugger\n// console.log(Store)\n// const store = new Store()\n// store.set('name', 'kcs')\n// console.log(store.get('name'))\n\n\nfunction App() {\n  const [files, setFiles] = useState(flattenArr(defaultFiles))\n  const [activeFileID, setActiveFileID] = useState('')\n  const [openedFileIDs, setOpenedFileIDs] = useState([])\n  const [unsavedFileIDs, setUnsavedFileIDs] = useState([])\n  const [searchedFiles, setSearchedFiles] = useState([]) \n\n  const activeFile = files[activeFileID]\n  const openedFiles = openedFileIDs.map(openID => {\n    return files[openID]\n  })\n  const filesArr = objToArr(files)\n  const savedLocation = remote.app.getPath('documents')\n  const fileListArr = (searchedFiles.length > 0) ? searchedFiles : filesArr\n\n  const fileClick = (fileID) => {\n    // set current active file\n    setActiveFileID(fileID)\n    // if openedFiles don't have the current ID\n    // then add new fileID to openedFiles\n    if (!openedFileIDs.includes(fileID)) {\n      setOpenedFileIDs([...openedFileIDs, fileID])\n    }\n  }\n  const tabClick = (fileID) => {\n    // set current active file\n    setActiveFileID(fileID)\n  }\n  const tabClose = (id) => {\n    // remove current id from openedFileIDs\n    const tabWithout = openedFileIDs.filter(fileID => fileID !== id)\n    setOpenedFileIDs(tabWithout)\n    // set the active to the first opened tab if still tabs left\n    if (tabWithout.length > 0) {\n      setActiveFileID(tabWithout[0])\n    } else {\n      setActiveFileID('')\n    }\n  }\n  const fileChange = (id, value) => {\n    const newFile = {...files[id], body: value}\n    setFiles({...files, [id]: newFile})\n    // update unsavedIDs\n    if (!unsavedFileIDs.includes(id)) {\n      setUnsavedFileIDs([...unsavedFileIDs, id])\n    }\n  }\n  const deleteFile = (id) => {\n    // filter out the current file id\n    delete files[id]\n    setFiles(files)\n    // close the tab if opened\n    tabClose(id)\n  }\n  const updateFileName = (id, title, isNew) => {\n    const modifiedFile = {...files[id], title, isNew: false}\n    if (isNew) {\n      fileHelper.writeFile(join(savedLocation, `${title}.md`), files[id].body).then((err) => {\n        setFiles({...files, [id]: modifiedFile})\n      })\n    } else {\n      fileHelper.renameFile(join(savedLocation, `${files[id].title}.md`), \n      join(savedLocation, `${title}.md`)).then(() => {\n        setFiles({...files, [id]: modifiedFile})\n      })\n    }\n    \n  }\n  const fileSearch = (keyword) => {\n    // filter out the new files based on the keyword\n    const newFiles = filesArr.filter(file => file.title.includes(keyword))\n    setSearchedFiles(newFiles)\n  }\n  const createNewFile = () => {\n    const newID = uuidv4()\n    const newFile = {\n      id: newID,\n      title: '',\n      body: '## 请输入 Markdown',\n      createdAt: new Date().getTime(),\n      isNew: true\n    }\n    setFiles({...files, [newID]: newFile})\n  }\n  const saveCurrentFile = () => {\n    fileHelper.writeFile(join(savedLocation, `${activeFile.title}.md`),\n      activeFile.body).then(() => {\n        setUnsavedFileIDs(unsavedFileIDs.filter(id => id !== activeFile.id))\n      })\n  }\n  const test = () => {\n    const Store = window.require(\"electron-store\")\n    debugger\n    const store = new Store({ watch: true })\n    debugger\n  }\n\n  return (\n    <div className=\"App container-fluid px-0\">\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 left-panel\">\n          <FileSearch\n            onFileSearch={fileSearch}\n          />\n          <FileList \n            files={fileListArr}\n            onFileClick={fileClick}\n            onFileDelete={deleteFile}\n            onSaveEdit={updateFileName}\n          />\n          <div className=\"row no-gutters button-group\">\n            <div className=\"col\">\n              <BottomBtn \n                text=\"新建\"\n                colorClass=\"btn-primary\"\n                icon={faPlus}\n                onBtnClick={createNewFile}\n              />\n            </div>\n            <div className=\"col\">\n              <BottomBtn \n                text=\"导入\"\n                colorClass=\"btn-success\"\n                icon={faFileImport}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-9 right-panel\">\n          {\n            !activeFile &&\n            <div className=\"start-page\">选择或者创建新的 Markdown 文档</div>\n          }\n          {\n            activeFile &&\n            <>\n              <TabList \n                files={openedFiles}\n                activeId={activeFileID}\n                unsaveIds={unsavedFileIDs}\n                onTabClick={tabClick}\n                onCloseTab={tabClose}\n              />\n              <SimpleMDE \n                key={activeFile && activeFile.id}\n                value={activeFile && activeFile.body}\n                onChange={(value) => {fileChange(activeFile.id, value)}}\n                options={{\n                  minHeight: '515px'\n                }}\n              />\n              <BottomBtn \n                text=\"导入\"\n                colorClass=\"btn-success\"\n                icon={faSave}\n                onBtnClick={saveCurrentFile}\n              />\n              <BottomBtn \n                text=\"测试\"\n                colorClass=\"btn-success\"\n                icon={faSave}\n                onBtnClick={test}\n              />\n            </>\n          }\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\workspace\\electron\\cloud-doc\\src\\components\\FileSearch.js",[],"D:\\workspace\\electron\\cloud-doc\\src\\components\\FileList.js",["55"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\r\nimport useKeyPress from '../hooks/useKeyPress'\r\n\r\nconst FileList = ({ files, onFileClick, onSaveEdit, onFileDelete }) => {\r\n  const [editStatus, setEditStatus] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const enterPressed = useKeyPress(13)\r\n  const escPressed = useKeyPress(27)\r\n  const closeSearch = (editItem) => {\r\n    setEditStatus(false)\r\n    setValue('')\r\n    // if we are editing a newly created file, we should delete this file\r\n    if (editItem.isNew) {\r\n      onFileDelete(editItem.id)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const editItem = files.find(file => file.id === editStatus)\r\n    if (enterPressed && editStatus && value.trim() !== '') {\r\n      onSaveEdit(editItem.id, value, editItem.isNew)\r\n      setEditStatus(false)\r\n      setValue('')\r\n    }\r\n    if (escPressed && editStatus) {\r\n      closeSearch(editItem)\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    const newFile = files.find(file => file.isNew)\r\n    console.log(newFile)\r\n    if (newFile) {\r\n      setEditStatus(newFile.id)\r\n      setValue(newFile.title)\r\n    }\r\n  }, [files])\r\n  let inputRef = useRef(null);\r\n  useEffect(() => {\r\n    if (editStatus) {\r\n      inputRef.current.focus()\r\n    }\r\n  }, [editStatus])\r\n  return (\r\n    <ul className=\"list-group list-group-flush file-list\">\r\n      {\r\n        files.map(file => (\r\n          <li\r\n            className=\"list-group-item bg-light row d-flex align-items-center file-item mx-0\"\r\n            key={file.id}\r\n          >\r\n            { \r\n              (file.id !== editStatus && !file.isNew) &&  \r\n              <>\r\n                <span className=\"col-2\">\r\n                  <FontAwesomeIcon\r\n                    size=\"lg\"\r\n                    icon={faMarkdown} \r\n                  />\r\n                </span>\r\n                <span \r\n                  className=\"col-6 c-link\"\r\n                  onClick={() => { onFileClick(file.id)} }\r\n                >{file.title}</span>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"icon-button col-2\"\r\n                  onClick={() => { setEditStatus(file.id); setValue(file.title)} }\r\n                >\r\n                  <FontAwesomeIcon\r\n                    title=\"编辑\"\r\n                    size=\"lg\"\r\n                    icon={faEdit} \r\n                  />\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"icon-button col-2\"\r\n                  onClick={() => { onFileDelete(file.id) }}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    title=\"删除\"\r\n                    size=\"lg\"\r\n                    icon={faTrash}\r\n                  />\r\n                </button>\r\n              </>\r\n            }\r\n            {\r\n              ((file.id === editStatus) || file.isNew) &&\r\n              <>\r\n                <input \r\n                  className=\"form-control col-10\"\r\n                  value={value}\r\n                  ref={inputRef}\r\n                  placeholder=\"请输入文件名称\"\r\n                  onChange={(e) => { setValue(e.target.value) }}\r\n                />\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"icon-button col-2\"\r\n                  onClick={() => closeSearch(file)}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    size=\"lg\"\r\n                    icon={faTimes} \r\n                  />\r\n                </button>\r\n              </>\r\n            }\r\n          </li>\r\n        ))\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nFileList.propTypes = {\r\n  files: PropTypes.array,\r\n  onFileClick: PropTypes.func,\r\n  onFileDelete: PropTypes.func,\r\n  onSaveEdit: PropTypes.func\r\n}\r\n\r\nFileList.defaultProps = {\r\n  files: [],\r\n}\r\n\r\nexport default FileList","D:\\workspace\\electron\\cloud-doc\\src\\utils\\defaultFiles.js",[],"D:\\workspace\\electron\\cloud-doc\\src\\hooks\\useKeyPress.js",["56"],"import { useState, useEffect } from 'react'\r\n\r\nconst useKeyPress = (targetKeyCode) => {\r\n  const [keyPressed, setKeyPressed] = useState(false)\r\n  const keyDownHandler = ({ keyCode }) => {\r\n    if (keyCode === targetKeyCode) {\r\n      setKeyPressed(true)\r\n    }\r\n  }\r\n  const keyUpHandler = ({ keyCode }) => {\r\n    if (keyCode === targetKeyCode) {\r\n      setKeyPressed(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', keyDownHandler)\r\n    document.addEventListener('keyup', keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler)\r\n      document.removeEventListener('keyup', keyUpHandler)\r\n    }\r\n  }, [])\r\n  return keyPressed\r\n}\r\n\r\nexport default useKeyPress\r\n","D:\\workspace\\electron\\cloud-doc\\src\\components\\BottomBtn.js",[],"D:\\workspace\\electron\\cloud-doc\\src\\components\\TabList.js",["57","58","59"],"import React, { useState, useEffect } from 'react'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './TabList.scss'\r\n\r\nconst TabList = ({ files, activeId, unsaveIds, onTabClick, onCloseTab }) => {\r\n  return (\r\n    <ul className=\"nav nav-pills tablist-component\">\r\n      {\r\n        files.map(file => {\r\n          const withUnsavedMark = unsaveIds.includes(file.id)\r\n          const fClassName = classNames({\r\n            'nav-link': true,\r\n            'active': file.id === activeId,\r\n            'withUnsaved': withUnsavedMark\r\n          })\r\n          return (\r\n            <li\r\n              className=\"nav-item\"\r\n              key={file.id}\r\n            >\r\n              <a \r\n                className={fClassName} \r\n                href=\"#\"\r\n                onClick={(e) => {e.preventDefault(); onTabClick(file.id)}}\r\n              >\r\n                {file.title}\r\n                <span \r\n                  className=\"ml-2 close-icon\"\r\n                  onClick={(e) => {e.stopPropagation(); onCloseTab(file.id)}}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={faTimes} \r\n                  />\r\n                </span>\r\n                { withUnsavedMark && <span className=\"ml-2 rounded-circle unsaved-icon\"></span> }\r\n              </a>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nTabList.propTypes = {\r\n  files: PropTypes.array,\r\n  activeId: PropTypes.string,\r\n  unsaveIds: PropTypes.array,\r\n  onTabClick: PropTypes.func,\r\n  onCloseTab: PropTypes.func\r\n}\r\n\r\nTabList.defaultProps = {\r\n  unsaveIds: []\r\n}\r\n\r\nexport default TabList","D:\\workspace\\electron\\cloud-doc\\src\\utils\\helper.js",[],"D:\\workspace\\electron\\cloud-doc\\src\\utils\\fileHelper.js",["60"],"const fs = window.require('fs').promises\r\nconst path = window.require('path')\r\n\r\nconst fileHelper = {\r\n  readFile: (path) => {\r\n    return fs.readFile(path, {encoding: 'utf8'})\r\n  },\r\n  writeFile: (path, content) => {\r\n    return fs.writeFile(path, content, {encoding: 'utf8'})\r\n  },\r\n  renameFile: (path, newPath) => {\r\n    return fs.rename(path, newPath)\r\n  },\r\n  deleteFile: (path) => {\r\n    return fs.unlink(path)\r\n  }\r\n}\r\n\r\nexport default fileHelper",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":123,"column":11,"nodeType":"67","messageId":"68","endLine":123,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":21,"column":3,"nodeType":"67","endLine":21,"endColumn":12,"suggestions":"71"},{"ruleId":"69","severity":1,"message":"72","line":22,"column":6,"nodeType":"73","endLine":22,"endColumn":8,"suggestions":"74"},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":24,"column":15,"nodeType":"79","endLine":28,"endColumn":16},{"ruleId":"65","severity":1,"message":"80","line":2,"column":7,"nodeType":"67","messageId":"68","endLine":2,"endColumn":11},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch] as a second argument to the useEffect Hook.",["83"],"React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["84"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Add dependencies array: [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",{"range":"89","text":"90"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"91","text":"92"},[1167,1167],", [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",[674,676],"[keyDownHandler, keyUpHandler]"]